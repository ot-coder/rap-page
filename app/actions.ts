"use server"

import { sanitizeInput } from "./utils/sanitizeInput"
import { filterContent } from "./utils/filterContent"
import { formatLyrics } from "./utils/formatLyrics"
import OpenAI from "openai"
import { rateLimit } from "./utils/rateLimit"

export async function generateLyrics(concept: string) {
  try {
    const openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    })
    
    if (!process.env.OPENAI_API_KEY) {
      throw new Error("OpenAI API key is not configured")
    }

    // Apply rate limiting
    await rateLimit()

    // Sanitize user input
    const sanitizedConcept = sanitizeInput(concept)

    // Generate lyrics
    const response = await openai.chat.completions.create({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content:
            "You are a talented rapper and R&B songwriter. Create lyrics based on the given concept or story. Avoid explicit content or offensive language.",
        },
        {
          role: "user",
          content: `Write rap or R&B lyrics based on this concept: ${sanitizedConcept}`,
        },
      ],
      max_tokens: 300,
    })

    const generatedLyrics = response.choices[0]?.message?.content

    if (!generatedLyrics) {
      throw new Error("No lyrics were generated by the AI")
    }

    const formattedLyrics = formatLyrics(generatedLyrics)

    // Apply content filtering
    const filteredLyrics = filterContent(formattedLyrics)

    return filteredLyrics
  } catch (error) {
    console.error("Error in generateLyrics:", error)
    throw error
  }
}

